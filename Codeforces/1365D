#include <bits/stdc++.h>
using namespace std;

int dx[4] = {1,-1,0,0};
int dy[4] = {0,0,1,-1};

bool valid(int i, int j, int n, int m){
    if(i>=0 && i<n && j>=0 && j<m) return true;
    else return false;
}

int main(){
    int t;
    cin>>t;
    
    while(t--){
        int n,m;
        cin>>n>>m;
        
        vector<string> grid(n);
        
        for(int i=0; i<n; i++){
            cin>>grid[i];
        }
        
        bool flg = false;
        
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(grid[i][j]=='B'){
                    for(int k=0; k<4; k++){
                        
                        int newx = i + dx[k];
                        int newy = j + dy[k];
                        
                        if(valid(newx,newy,n,m) && grid[newx][newy]=='.'){
                            grid[newx][newy] = '#'; //blocked
                        }
                        else if(valid(newx,newy,n,m) && grid[newx][newy]=='G'){
                            flg = true;
                        }
                    }
                }
            }
        }
        
        if(flg == true){
            cout<<"No"<<endl;
        }
        
        //now bfs from n,m;
        vector<vector<int>> vis(n, vector<int> (m,0));
        queue<pair<int,int>> q;
        
        if(grid[n-1][m-1] != '#'){
            vis[n-1][m-1] = 1;
            q.push({n-1,m-1});
        }
        
        while(!q.empty()){
            auto it = q.front();
            q.pop();
            
            int x = it.first;
            int y = it.second;
            
            for(int k=0; k<4; k++){
                int newx = x + dx[k];
                int newy = y + dy[k];
                
                if(valid(newx,newy,n,m) && grid[newx][newy] != '#' && !vis[newx][newy]){
                    vis[newx][newy] = 1;
                    q.push({newx,newy});
                }
            }
        }
        
        //check now
        int good = true;
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(grid[i][j]=='G' && !vis[i][j]){
                    good = false;
                }
                else if(grid[i][j]=='B' && vis[i][j]){
                    good = false;
                }
            }
        }
        
        if(good) cout<<"Yes"<<endl;
        else cout<<"No"<<endl;
    }
    
    return 0;
}
