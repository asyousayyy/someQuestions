#include <bits/stdc++.h>
using namespace std;

int help(vector<int> &arr, int i, bool flag, vector<vector<int>> &dp) {
    int n = arr.size();
    if (i == n) {
        return flag ? 1 : 0;
    }
    
    if(dp[i][flag]!=-1) return dp[i][flag];

    int ways = 0;

    ways += help(arr, i + 1, flag || (arr[i] < 0), dp);

    if (flag) { //already a negative number present
        ways += help(arr, i + 1, (arr[i] < 0), dp); 
    }

    return dp[i][flag] = ways;
}

int helper(vector<int> &arr) {
    vector<vector<int>> dp(arr.size(), vector<int>(2,-1));
    return help(arr, 0, false, dp);
}

int main() {
    int n;
    cin >> n;
    vector<int> arr(n);
    for (int i = 0; i < n; i++) cin >> arr[i];

    cout << helper(arr) << endl;
    return 0;
}
