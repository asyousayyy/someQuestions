int longestSquareStreak(vector<int>& nums) {
    int n = nums.size();
    if (n < 2) return -1;
    
    sort(nums.begin(), nums.end());
    
    unordered_map<int, int> dp; 
    int maxLength = 0;

    for (int i = 0; i < n; i++) {
        int num = nums[i];
        int root = sqrt(num);
        if (root * root == num && dp.count(root)) {
            dp[num] = dp[root] + 1;
        } else {
            dp[num] = 1; 
        }
        maxLength = max(maxLength, dp[num]);
    }

    return maxLength >= 2 ? maxLength : -1;
}
