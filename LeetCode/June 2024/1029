static bool cmp(pair<int,int> &a, pair<int,int> &b){
        return a.first > b.first;
    }
    
    int twoCitySchedCost(vector<vector<int>>& costs) {
        int n = costs.size()/2;
        vector<pair<int,int>> diff;
        int cost = 0;

        for(int i=0; i<2*n; i++){
            int acost = costs[i][0];
            int bcost = costs[i][1];
            diff.push_back({(acost-bcost),i});
        }

        sort(diff.begin(), diff.end(), cmp); //basically in decreasing order of diff

        for(int i=0; i<n; i++){
            int idx = diff[i].second; //take b for these
            cost += costs[idx][1];
        }
        //now take remaning a
        for(int i=n; i<2*n; i++){
            int idx = diff[i].second;
            cost += costs[idx][0]; //take a for these
        }

        return cost;
    }
