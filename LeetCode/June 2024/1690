int helper(vector<int> &nums, int i, int j, int sum,vector<vector<int>> &dp){
        if(i>j) return 0;

        if(dp[i][j]!=-1) return dp[i][j];

        int op1 = (sum - nums[i]) - helper(nums,i+1,j,sum-nums[i],dp);
        int op2 = (sum - nums[j]) - helper(nums,i,j-1,sum-nums[j],dp);

        return dp[i][j] = max(op1,op2);
    }

    int stoneGameVII(vector<int>& stones) {
        int n = stones.size();
        vector<vector<int>> dp(n+1,vector<int>(n+1,-1));
        int sum = accumulate(stones.begin(), stones.end(), 0);
        return helper(stones,0,n-1,sum,dp);
    }
