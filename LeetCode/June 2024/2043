class Bank {
private:
    vector<long long> b;

public:
    Bank(vector<long long>& balance) {
        b = balance;
    }
    
    bool transfer(int account1, int account2, long long money) {
        if (isValidAccount(account1) && isValidAccount(account2) &&
            b[account1 - 1] >= money) {
            b[account1 - 1] -= money;
            b[account2 - 1] += money;
            return true;
        }
        return false;
    }
    
    bool deposit(int account, long long money) {
        if (isValidAccount(account)) {
            b[account - 1] += money;
            return true;
        }
        return false;
    }
    
    bool withdraw(int account, long long money) {
        if (isValidAccount(account) && b[account - 1] >= money) {
            b[account - 1] -= money;
            return true;
        }
        return false;
    }

private:
    bool isValidAccount(int account) {
        return account >= 1 && account <= b.size();
    }
};
