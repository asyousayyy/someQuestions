long long numberOfWays(string s) {
    int n = s.size();
    vector<int> one(n, 0);
    vector<int> zero(n, 0);
    if (s[0] == '1') one[0] = 1;
    else zero[0] = 1;

    for (int i = 1; i < n; i++) {
        one[i] = one[i - 1];
        zero[i] = zero[i - 1];
        if (s[i] == '1') {
            one[i]++;
        } else {
            zero[i]++;
        }
    }

    long long ways = 0;
    for (int i = 1; i < n - 1; i++) {
        if (s[i] == '1') {
            ways += (long long)zero[i - 1] * (zero[n - 1] - zero[i]);
        } else {
            ways += (long long)one[i - 1] * (one[n - 1] - one[i]);
        }
    }

    return ways;
}
