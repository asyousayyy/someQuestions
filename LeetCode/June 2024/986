static bool cmp(vector<int>& a, vector<int>& b) {
    if (a[0] == b[0]) {
        return a[1] < b[1];
    }
    return a[0] < b[0];
}

vector<vector<int>> intervalIntersection(vector<vector<int>>& first,
 vector<vector<int>>& second) {
    vector<vector<int>> v;
    sort(first.begin(), first.end(), cmp);
    sort(second.begin(), second.end(), cmp);

    int i = 0, j = 0;

    while (i < first.size() && j < second.size()) {
        int start1 = first[i][0];
        int end1 = first[i][1];
        int start2 = second[j][0];
        int end2 = second[j][1];

        if (start2 <= end1 && start1 <= end2) {
            v.push_back({ max(start1, start2), min(end1, end2) });
        }

        if (end1 < end2) {
            i++;
        } else {
            j++;
        }
    }

    return v;
}
