int maximumUniqueSubarray(vector<int>& nums) {
        int n = nums.size();
        int maxsum = 0;

        int i = 0, j = 0;
        int sum = 0;
        set<int> st;

        while(j<n){
            
            if(st.find(nums[j])==st.end()){
                st.insert(nums[j]);
                sum += nums[j];
                j++;
                maxsum = max(maxsum, sum);
            }
            else{
                while(st.find(nums[j])!=st.end()){
                    st.erase(nums[i]);
                    sum -= nums[i];
                    i++;
                }
            }

            // while(st.find(nums[j])!=st.end()){
            //     st.erase(nums[i]);
            //     sum -= nums[i];
            //     i++;
            // }

            // maxsum = max(maxsum, sum);
            // j++;
            
        }   

        return maxsum;
    }
