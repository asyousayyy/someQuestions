int height(TreeNode* root) {
    if (!root) return 0;
    int left = height(root->left);
    int right = height(root->right);
    return 1 + max(left, right);        
}

void helper(int row, int start, int end, TreeNode* root, vector<vector<string>>& v) {
    if (!root) return;
    
    int mid = (start + end) / 2;
    v[row][mid] = to_string(root->val); 
    
    helper(row + 1, start, mid - 1, root->left, v);
    helper(row + 1, mid + 1, end, root->right, v);
}

vector<vector<string>> printTree(TreeNode* root) {
    int h = height(root);
    int n = pow(2, h) - 1; 
    vector<vector<string>> v(h, vector<string>(n, "")); 
    
    helper(0, 0, n - 1, root, v);
    
    return v;
}
