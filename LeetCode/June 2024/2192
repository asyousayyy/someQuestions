 void dfs(int node, vector<int> &ans, vector<vector<int>> &adj, vector<int> &vis){
        
        vis[node] = 1;

        for(auto it : adj[node]){
            if(!vis[it]){
                ans.push_back(it);
                dfs(it,ans,adj,vis);
            }
        }
    }

    vector<vector<int>> getAncestors(int n, vector<vector<int>>& edges) {
        
        vector<vector<int>>adj(n);
        vector<vector<int>> ans;

        for(auto it : edges){
            int u = it[0];
            int v = it[1];
            adj[v].push_back(u); //reversing the edges
        }

        for(int i=0; i<n; i++){
            vector<int> temp,vis(n,0);
            dfs(i,temp,adj,vis);
            sort(temp.begin(), temp.end());
            ans.push_back(temp);
        }

        return ans;
    }
