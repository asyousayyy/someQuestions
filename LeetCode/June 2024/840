 bool isvalid(int row, int col, vector<vector<int>> &grid){
        //rows,colm,diagonals
        int sum = 0;
        map<int,int> mp;

         for(int i=row;i<row+3;i++)
             for(int j=col;j<col+3;j++)
             {
                if(grid[i][j]< 1 || grid[i][j]>9 || mp[grid[i][j]])return false;
                mp[grid[i][j]]=1;
             }

        sum = grid[row][col] + grid[row][col+1] + grid[row][col+2];
        if(sum != grid[row][col+2] + grid[row+1][col+1] + grid[row+2][col]) return false;
        if(sum != grid[row][col] + grid[row+1][col+1] + grid[row+2][col+2])return false;

        for(int i=0; i<3; i++){
            if(sum != grid[row+i][col] + grid[row+i][col+1] + grid[row+i][col+2])return false;
            if(sum != grid[row][col+i] + grid[row+1][col+i] + grid[row+2][col+i])return false;
        }
        return true;
    }

    int numMagicSquaresInside(vector<vector<int>>& grid) {
        int m = grid.size(), n = grid[0].size();
        int count = 0;

        for(int i=0; i<m-2; i++){
            for(int j=0; j<n-2; j++){
                if(isvalid(i,j,grid)) count++;
            }
        }

        return count;
    }
  
