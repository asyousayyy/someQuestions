static bool cmp(vector<int> &a, vector<int> &b){
    return a[1] < b[1];
}

vector<int> countServers(int n, vector<vector<int>>& logs, int x, vector<int>& q) {
    
    vector<int> ans(q.size());
    sort(logs.begin(), logs.end(), cmp);

    int i = 0, j = 0;
    map<int,int> mp;

    for (auto [end, idx] : v) {
        int start = end - x;

        while (j < logs.size() && logs[j][1] <= end) {
            mp[(logs[j][0])]++;
            j++;
        }

        while (i < logs.size() && logs[i][1] < start) {
            mp[logs[i][0]]--;
            if(mp[logs[i][0]]==0){
                mp.erase(logs[i][0]);
            }
            i++;
        }

        ans[idx] = n - mp.size();
    }

    return ans;
}
