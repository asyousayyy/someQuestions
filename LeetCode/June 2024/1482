class Solution {
public:
    bool ispossible(int mid, int m, int k, vector<int> &day){
        int n = day.size();

        int count = 0, bou = 0;

        for(int i=0; i<n; i++){
            if(day[i]<=mid){
                count++; //this flower has bloomed
            }
            else{
                bou += (count/k); //total bouquets
                count = 0;
            }
        }

        bou += (count/k); //edge case, last tk chla gya agar phla condition
        return bou>=m;
    }

    int minDays(vector<int>& day, int m, int k) {
        int n = day.size();

        int mini = *min_element(day.begin(), day.end());
        int maxi = *max_element(day.begin(), day.end());
        int low = mini;
        int high = maxi;

        if(m > n/k) return -1;

        while(low<=high){
            int mid = low + (high-low)/2;

            if(ispossible(mid,m,k,day)){               
                high = mid-1;
            }

            else{
                low = mid+1;
            }
        }

        return low;
    }
};
