long long minCost(vector<int>& nums, int x) {
    
    int n = nums.size();
    long long cost = accumulate(nums.begin(), nums.end(), 0ll);
    vector<long long> dp(nums.begin(), nums.end());

    for (int j = 1; j < n; j++) {
        for (int i = 0; i < n; i++) {
            int temp = (i + j) % n;
            dp[i] = min(dp[i], (long long)nums[temp]);
        }

        long long sum = accumulate(dp.begin(), dp.end(), 0ll);
        cost = min(cost, sum + (long long)j * (long long)x);
    }

    return cost;
}
