static bool cmp(pair<int,int> &a, pair<int,int> &b){
        return a.second < b.second;
    }

    vector<int> maxSubsequence(vector<int>& nums, int k) {
        
        int n = nums.size();
        priority_queue<pair<int,int>> pq;

        vector<int> ans;

        vector<pair<int,int>> v;

        for(int i=0; i<n; i++){
            pq.push({nums[i],i});
        }

        for(int i=0; i<k; i++){
            v.push_back(pq.top()); //top k elements
            pq.pop();
        }

        sort(v.begin(), v.end(), cmp);
        for(auto it : v){
            ans.push_back(it.first);
        }

        return ans;
    }
