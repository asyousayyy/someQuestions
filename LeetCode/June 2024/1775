int minOperations(vector<int>& nums1, vector<int>& nums2) {
        int sum1 = accumulate(nums1.begin(), nums1.end(), 0);
        int sum2 = accumulate(nums2.begin(), nums2.end(), 0);

        int diff = abs(sum1-sum2);

        priority_queue<int> pq;

        if(sum1 > sum2){
            for(int i=0; i<nums1.size(); i++){
                pq.push(nums1[i]-1);
            }
            for(int i=0; i<nums2.size(); i++){
                pq.push(6-nums2[i]);
            }
        }
        
        else{
            for(int i=0; i<nums2.size(); i++){
                pq.push(nums2[i]-1);
            }
            for(int i=0; i<nums1.size(); i++){
                pq.push(6-nums1[i]);
            }
        }

        int count = 0;
        while(pq.top() > 0){
            if(diff <= 0) break;
            int top = pq.top();
            pq.pop();
            diff -= top;
            count++;
        }
        if(diff > 0) return -1;
        return count;
    }
