double maxAverageRatio(vector<vector<int>>& classes, int k) {
        double n = classes.size(), i = 0, ans = 0;
        priority_queue<pair<double,int>> pq; 

        for(int i=0; i<n; i++){
            double change = ((double)(classes[i][0]+1)/(classes[i][1]+1)) - 
            ((double)(classes[i][0])/classes[i][1]);
            pq.push({change,i});
        }

        while(k--){
            auto it = pq.top();
            pq.pop();

            double change = it.first;
            int idx = it.second;

            //add student to them
            int x = classes[idx][0]++;
            int y = classes[idx][1]++;

            change = ((double)(classes[idx][0] + 1) / (classes[idx][1] + 1)) - 
            ((double)(classes[idx][0]) / classes[idx][1]);
            pq.push({change,idx});
        }

        for(auto it : classes){
            ans += ((double)it[0])/it[1];
        }

        return ans/n;
    }
