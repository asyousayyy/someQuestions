static bool cmp(pair<int,int> &a, pair<int,int> &b){
        if(a.first==b.first){
            return a.second > b.second;
        }
        return a.first > b.first;
    }

    int find(vector<int> &arr){
        int n = arr.size();
        sort(arr.begin(), arr.end());

        return arr[(n-1)/2];
    }
    vector<int> getStrongest(vector<int>& arr, int k) {
        int n = arr.size();
        vector<int> ans;

        vector<pair<int,int>> v;
        int med = find(arr);

        for(int i=0; i<n; i++){
            int diff = abs(arr[i]-med);
            v.push_back({diff,arr[i]});
        }

        sort(v.begin(), v.end(),cmp);
        for(int i=0; i<k; i++){
            ans.push_back(v[i].second);
        }

        return ans;
    }
