int binarySearch(vector<int>& nums2, int target) {
    int low = 0, high = nums2.size() - 1;
    int result = -1;

    while (low <= high) {
        int mid = low + (high - low) / 2;
        
        if (nums2[mid] >= target) {
            result = mid; //go till farthest greater
            low = mid + 1; 
        } else {
            high = mid - 1; 
        }
    }

    return result;
}

int maxDistance(vector<int>& nums1, vector<int>& nums2) {
    int n = nums1.size();
    int m = nums2.size();
    int maxDistance = 0;

    for (int i = 0; i < n; ++i) {
        int j = binarySearch(nums2, nums1[i]);

        if (j != -1) {
            maxDistance = max(maxDistance, j - i);
        }
    }

    return maxDistance;
}
