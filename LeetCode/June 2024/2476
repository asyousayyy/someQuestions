void inorder(TreeNode* root, vector<int> &in){
        if(!root) return;
        inorder(root->left, in);
        in.push_back(root->val);
        inorder(root->right,in);
    }

    vector<vector<int>> closestNodes(TreeNode* root, vector<int>& queries) {
        vector<vector<int>> ans;
        vector<int> in;
        inorder(root,in);

        for(int q : queries){
            auto first = upper_bound(in.begin(), in.end(), q)-1;
            int val1 = (first >= in.begin() && *first <= q) ? *first : -1;

            auto second = lower_bound(in.begin(), in.end(), q);
            int val2 = (second == in.end()) ? -1 : *second;

            ans.push_back({val1,val2});
        }

        return ans;
    }
