static bool cmp(pair<int,int> &a, pair<int,int>&b){
        return a.second < b.second;
    }

    bool maxSubstringLength(string s, int k) {
        int n = s.size();
        if(k==0) return true;

        vector<int> first(26,n), last(26,-1);

        for(int i=0; i<n; i++){
            int temp = s[i]-'a';
            first[temp] = min(first[temp],i);
            last[temp] = i;
        }

        vector<pair<int,int>> interval;
        for(int i=0; i<n; i++){

            int temp = s[i]-'a';
            if(i != first[temp]) continue; //we will start from first only
            int j = last[temp];

            bool valid = true;

            for(int idx=i; idx<=j; idx++){
                int t = s[idx]-'a';
                if(first[t] < i){
                    valid = false;
                    break;
                }
                j = max(j, last[t]);
            }

            if(valid && (j-i+1<n)){
                interval.push_back({i,j});
            }
        }

        sort(interval.begin(), interval.end(), cmp);

        int count = 0;
        int end = -1;

        for(auto it : interval){
            if(it.first>end){
                count++;
                end = it.second;
            }
        }

        return count>=k;
    }
