 bool helper(vector<int> &v, int n, int idx, set<int> &vis){
        if(idx >= 2*n - 1) return true;

        if(v[idx]!=-1) return helper(v,n,idx+1,vis);

        for(int i=n; i>=1; i--){
            if(vis.find(i)!=vis.end()) continue;
            if(v[idx]==-1 && (i==1 || (idx+i<2*n-1 && (v[idx+i]==-1)))){
                v[idx] = i;
                if(i!=1) v[idx+i] = i;
                vis.insert(i);

                if(helper(v,n,idx+1,vis)) return true;

                vis.erase(i);
                v[idx] = -1;
                if(i!=1) v[idx+i] = -1;
            }
        }

        return false;
    }

    vector<int> constructDistancedSequence(int n) {        
        vector<int> v(2*n-1,-1);
        set<int> vis;
        helper(v,n,0,vis);
        return v;
    }
