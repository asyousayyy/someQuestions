void helper(vector<vector<int>> &ans, vector<int> &temp, int idx, vector<int> &nums) {
    if (temp.size() >= 2) {
        ans.push_back(temp);
    }

    for (int i = idx; i < nums.size(); i++) {
        if (temp.empty() || nums[i] >= temp.back()) {
            temp.push_back(nums[i]);
            helper(ans, temp, i + 1, nums);
            temp.pop_back();
        }
    }
}

vector<vector<int>> findSubsequences(vector<int>& nums) {
    vector<vector<int>> ans;
    vector<int> temp;
    helper(ans, temp, 0, nums);
    
    set<vector<int>> st(ans.begin(), ans.end());
    ans.clear();
    for(auto it : st){
        ans.push_back(it);
    }

    return ans;
}
