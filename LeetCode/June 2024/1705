int eatenApples(vector<int>& apples, vector<int>& days) {
        int n = apples.size();
        priority_queue<pair<int,int>, vector<pair<int,int>>, 
        greater<pair<int,int>>> pq; //min heap
        int ans = 0;

        for(int i=0; i<n||!pq.empty(); i++){
            if(i < n && apples[i] > 0){
                pq.push({i+days[i], apples[i]});
            }

            while(!pq.empty() && pq.top().first<=i){
                pq.pop(); //rotten apples
            }

            if(!pq.empty()){
                auto p = pq.top();
                pq.pop();

                p.second--;// eat apples
                if(p.second > 0){
                    pq.push(p);
                }
                ans++;
            }
        }

        return ans;
    }
