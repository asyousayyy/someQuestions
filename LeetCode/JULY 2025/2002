class Solution {
public:

    bool isvalid(string &s){
        int n = s.size();
        int i=0,j=n-1;
        while(i<=j){
            if(s[i]!=s[j]){
                return false;
            }
            i++;
            j--;
        }
        return true;
    }

    void helper(int i, string s, string &s1, string &s2, int &ans){
        
        if(i>=s.size()){
            if(isvalid(s1) && isvalid(s2)){
                ans = max(ans, (int)s1.size() * (int)s2.size());
            }
            return;
        }

        s1.push_back(s[i]);
        helper(i+1,s,s1,s2,ans);
        s1.pop_back();

        s2.push_back(s[i]);
        helper(i+1,s,s1,s2,ans);
        s2.pop_back();

        helper(i+1,s,s1,s2,ans);

    }

    int maxProduct(string s) {
        int n = s.size();
        int ans = 0;
        string s1,s2;
        helper(0,s,s1,s2,ans);
        return ans;
    }
};
