bool helper(vector<int> &pos, int mid, int m){
        int count = 1;
        int last = pos[0];

        for(int i=1; i<pos.size(); i++){
            if(pos[i]-last>=mid){
                count++;
                last = pos[i];
            }
        }

        return count>=m;
    }

    int maxDistance(vector<int>& position, int m) {
        int n = position.size();
        sort(position.begin(), position.end());
        int low = 0;
        int high = position[n-1]-position[0];

        int ans = -1;
        while(low<=high){
            int mid = low + (high-low)/2;

            if(helper(position,mid,m)){
                ans = mid;
                low = mid+1;
            }
            else{
                high = mid-1;
            }
        }

        return ans;
    }
