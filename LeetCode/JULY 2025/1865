class FindSumPairs {
public:
    int n,m;
    vector<int> nums1, nums2;
    unordered_map<int,int> mp2; //for nums2

    FindSumPairs(vector<int>& n1, vector<int>& n2) {
        n = n1.size();
        m = n2.size();
        nums1 = n1;
        nums2 = n2;

        for (int x : nums2) {
            mp2[x]++;
        }
    }
    
    void add(int index, int val) {
        mp2[nums2[index]]--;
        nums2[index] += val;
        mp2[nums2[index]]++;
    }
    
    int count(int target) {
        int count = 0;

        for(int i=0; i<n; i++){
            if(mp2.find(target - nums1[i]) != mp2.end()){
                count+=mp2[target-nums1[i]];
            }
        }

        return count;
    }
};

/**
 * Your FindSumPairs object will be instantiated and called as such:
 * FindSumPairs* obj = new FindSumPairs(nums1, nums2);
 * obj->add(index,val);
 * int param_2 = obj->count(tot);
 */
