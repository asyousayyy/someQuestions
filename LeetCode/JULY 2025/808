class Solution {
public:

    double helper(int a, int b, map<pair<int,int>,double>&dp) {
        
        if(a<=0 && b>0) return 1;
        if(a<=0 && b<=0) return 0.5; //half
        if(b<=0) return 0;

        if(dp[{a,b}]>0) return dp[{a,b}];

        double op1 = helper(a-100,b,dp);
        double op2 = helper(a-75,b-25,dp);
        double op3 = helper(a-50,b-50,dp);
        double op4 = helper(a-25,b-75,dp);
        
        return dp[{a,b}] = 0.25*(op1+op2+op3+op4);
    }

    double soupServings(int n) {
        if (n >= 5000) return 1;         
        map<pair<int,int>, double> dp;
        return helper(n,n,dp);
    }
};
