class Solution {
public:
    int helper(vector<int> &costs, int idx, int n, vector<int> &dp) {
        if(idx == n) return 0;             
        if(idx > n) return 1e9;            

        if(dp[idx] != -1) return dp[idx]; 

        int ans = 1e9;

        for(int j = 1; j <= 3; j++) {
            int next = idx + j;
            if(next <= n) {
                int cost = costs[next-1] + j*j;
                ans = min(ans, helper(costs, next, n, dp) + cost);
            }
        }

        return dp[idx] = ans;
    }

    int climbStairs(int n, vector<int>& costs) {
        vector<int> dp(n+1, -1);
        return helper(costs, 0, n, dp);
    }
};
