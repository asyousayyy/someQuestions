/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool check(vector<int> &freq){
        int odd = 0;
        for(auto it : freq){
            if(it%2==1){
                odd++;
            }
        }
        return odd<=1;
    }

    int helper(TreeNode* root, vector<int> &freq){
        if(!root) return 0;
        
        freq[root->val]++;

        int count = 0;

        if(!root->left && !root->right){
            if(check(freq)) count++;
        }
        
        else{
            count += helper(root->left, freq);
            count += helper(root->right, freq);
        }

        freq[root->val]--;
        return count;

    }

    int pseudoPalindromicPaths (TreeNode* root) {
        if(!root) return 0;
        vector<int> freq(10,0);
        return helper(root,freq);
    }
};
