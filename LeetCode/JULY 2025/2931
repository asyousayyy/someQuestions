long long maxSpending(vector<vector<int>>& values) {

        int m = values.size();
        int n = values[0].size();
        
        priority_queue<long long, vector<long long>, greater<long long>> pq;//minheap

        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                pq.push(values[i][j]);
            }
        }

        long long ans = 0;
        int day = 1;

        while(!pq.empty()){
            auto it = pq.top();
            pq.pop();

            ans += (long long) day * it;
            day++;
        }

        return ans;
    }
