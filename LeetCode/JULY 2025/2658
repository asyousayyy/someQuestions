int helper(int i, int j, vector<vector<int>>&grid){
        int m = grid.size();
        int n = grid[0].size();

        if(i<0||j<0||i>=m||j>=n||grid[i][j]==0) return 0;

        int sum = grid[i][j];
        grid[i][j] = 0;

        int up = helper(i-1,j,grid);
        int down = helper(i+1,j,grid);
        int left = helper(i,j-1,grid);
        int right = helper(i,j+1,grid);

        return sum+up+down+left+right;
    }

    int findMaxFish(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        int ans = 0;

        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(grid[i][j]>0)
                ans = max(ans, helper(i,j,grid));
            }
        }

        return ans;
    }
