bool helper(vector<vector<int>> &grid2, vector<vector<int>> &grid1, int i, int j){

        int m = grid2.size();
        int n = grid2[0].size();

        if(i>=m || j>=n || i<0 || j<0 || grid2[i][j]==0) return true;

        if(grid1[i][j]==0 && grid2[i][j]==1) return false;

        grid2[i][j] = 0; //mark vis

        bool up = helper(grid2,grid1,i-1,j);
        bool down = helper(grid2,grid1,i+1,j);
        bool left = helper(grid2,grid1,i,j-1);
        bool right = helper(grid2,grid1,i,j+1);

        return up&down&left&right;
    }

    int countSubIslands(vector<vector<int>>& grid1, vector<vector<int>>& grid2) {
        
        int m = grid2.size();
        int n = grid2[0].size();

        int count = 0;

        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(grid2[i][j]==1){
                    if(helper(grid2,grid1,i,j)){
                        count++;
                    }
                }
            }
        }

        return count;
    }
