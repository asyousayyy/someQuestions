class Robot {
public:
    int m, n;
    int currx,curry,dir;
    vector<string> mp = {"East", "North", "West", "South"};

    Robot(int width, int height) {
        m = height;
        n = width;
        currx = 0, curry = 0, dir = 0;
    }
    
    void step(int num) {
        num = num%(2*(m+n-2)); //because corners are shared na

        while(num>0){
            if(dir==0){ //east
                int move = min(num, n-curry-1);
                curry += move;
                num -= move;
                if(num>0) dir = (dir+1)%4;
            }

            else if(dir==1){
                int move = min(num, m-currx-1);
                currx += move;
                num -= move;
                if(num>0) dir = (dir+1)%4;
            }

            else if(dir==2){
                int move = min(curry, num);
                curry -= move;
                num -= move;
                if(num>0) dir = (dir+1)%4;
            }

            else{
                int move = min(currx,num);
                currx -= move;
                num -= move;
                if(num>0) dir = (dir+1)%4;
            }
        }

        if(currx==0 && curry==0 && num==0) dir = 3;
    }
    
    vector<int> getPos() {
        return {curry, currx};
    }
    
    string getDir() {
        return mp[dir];
    }
};

/**
 * Your Robot object will be instantiated and called as such:
 * Robot* obj = new Robot(width, height);
 * obj->step(num);
 * vector<int> param_2 = obj->getPos();
 * string param_3 = obj->getDir();
 */
