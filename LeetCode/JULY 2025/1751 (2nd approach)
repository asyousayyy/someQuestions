 int maxValue(vector<vector<int>>& events, int k) {        
    int n = events.size();
    sort(events.begin(), events.end()); 

    vector<vector<int>> dp(n + 1, vector<int>(k + 1, 0));

    for(int i = n - 1; i >= 0; i--) {
        for(int j = 1; j <= k; j++) {  
            int nottake = dp[i + 1][j];
            
            int low = i + 1, high = n - 1;
            int ans = n;

            while(low <= high) {
                int mid = (low + high) / 2;
                if(events[mid][0] > events[i][1]) {
                    ans = mid;
                    high = mid - 1;
                } else {
                    low = mid + 1;
                }
            }

            int take = events[i][2];
            if(ans < n) {
                take += dp[ans][j - 1];  
            }

            dp[i][j] = max(take, nottake); 
        }
    }

    return dp[0][k];  
}
