long long dp[201][201];

    long long helper(int m, int n, map<pair<int,int>,long long> &mp){
        if(m<=0 || n<=0) return 0;
        if(dp[m][n] != -1) return dp[m][n];

        long long ans = mp[{m,n}];

        for(int i=1; i<=m/2; i++){
            ans = max(ans, helper(i,n,mp)+helper(m-i,n,mp));
        }

        for(int j=1; j<=n/2; j++){
            ans = max(ans, helper(m,j,mp)+helper(m,n-j,mp));
        }

        return dp[m][n] = ans;
    }

    long long sellingWood(int m, int n, vector<vector<int>>& prices) {
        
        memset(dp,-1,sizeof(dp));
        map<pair<int,int>,long long> mp;
        for(auto it : prices){
            mp[{it[0],it[1]}] = it[2];
        }

        return helper(m,n,mp);

    }
