int helper(vector<int>& nums, int k) {
        vector<int> ans;
        int n = nums.size();
        deque<int> q(k);

        for(int i=0;i<k;i++){
            while(q.empty()==false && nums[i] >= nums[q.back()]){
                q.pop_back();
            }
            q.push_back(i);
        }
        ans.push_back(nums[q.front()]);

        for(int i=k; i<n; i++){
            while(q.empty()==false && q.front() <= i-k){
                q.pop_front();
            }
            while(q.empty()==false && nums[i]>=nums[q.back()]){
                q.pop_back();
            }
            q.push_back(i);
            ans.push_back(nums[q.front()]);
        }

        return *min_element(ans.begin(), ans.end());
}

vector<int> solve(vector<int> &arr, 
vector<int> &query) {
    vector<int> ans;
    
    for (int k : query) {
        ans.push_back(helper(arr, k));
    }
    
    return ans;
}
