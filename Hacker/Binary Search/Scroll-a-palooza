#include <bits/stdc++.h>
using namespace std;
#define int long long int

void solve() {
    int n;
    cin >> n;

    vector<int> a(n), pre(n);
    for(int i = 0; i < n; i++) {
        cin >> a[i];
        pre[i] = a[i];
        if(i > 0) {
            pre[i] += pre[i - 1];
        }
    }

    vector<int> first(n, LLONG_MAX), last(n, LLONG_MIN);
    for(int i = 0; i < n; i++) {
        first[i] = abs(pre[i]);
        if(i > 0) {
            first[i] = max(first[i], first[i - 1]);
        }
    }
    for(int i = n - 1; i >= 0; i--) {
        last[i] = abs(pre[i]);
        if(i < n - 1) {
            last[i] = max(last[i], last[i + 1]);
        }
    }

    int q;
    cin >> q;
    while(q--) {
        int w;
        cin >> w;

        int ind1 = lower_bound(first.begin(), first.end(), w) - first.begin();
        if(ind1 == n) {
            cout << -1 << endl;
            continue;
        }
        ind1 += 1;
        int ind2 = lower_bound(last.begin(), last.end(), w) - last.begin();
        ind2 = n - ind2;

        cout << ind1 << ' ' << ind2 << endl;
    }
}

#undef int 
int main() {
#define int long long int

    int T;
    cin >> T;

    for(int tc = 1; tc <= T; tc++){
        solve();
    }

    return 0;  
}
